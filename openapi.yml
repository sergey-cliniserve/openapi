---
  openapi: "3.0.3"
  info: 
    title: "Cliniserve CARE API"
    version: "0.0.1"
    contact: 
      name: "Jaakko Nurkka"
      email: "jaakko@cliniserve.de"
  servers: 
    - 
      url: "https://api.cliniserve.de"
      description: "Production"
    - 
      url: "http://api.staging.cliniserve.de"
      description: "Staging"
    - 
      url: "http://localhost:8080"
      description: "Development"
  paths: 
    /health: 
      get: 
        summary: "Healthcheck"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  title: "Healthcheck success"
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "ok"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /tasks: 
      get: 
        summary: "Get tasks"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "array"
                  items: 
                    $ref: "#/components/schemas/TaskDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          403: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      post: 
        summary: "Create a task"
        requestBody: 
          content: 
            application/json: 
              schema: 
                oneOf: 
                  - 
                    $ref: "#/components/schemas/TasksPostBodyOld"
                  - 
                    $ref: "#/components/schemas/TasksPostBodyNew"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  oneOf: 
                    - 
                      type: "object"
                      additionalProperties: false
                      required: 
                        - "_id"
                      properties: 
                        _id: 
                          type: "string"
                    - 
                      $ref: "#/components/schemas/TaskContainer"
          208: 
            description: "Already exists"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "already-exists"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-due-date-format"
                        - "patient-message-encryption-disallowed"
                        - "invalid-arguments"
          403: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
                        - "patient-not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /tasks/{id}: 
      get: 
        summary: "Get task By Id"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            schema: 
              type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/TaskDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          403: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          404: 
            description: "Requested task not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      patch: 
        summary: "Update task"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            schema: 
              type: "string"
        requestBody: 
          description: "Use \"X-Message-ID\" header to specify custom id for automated acceptance message."
          content: 
            application/json: 
              schema: 
                title: "PATCH /tasks body"
                type: "object"
                required: []
                additionalProperties: false
                properties: 
                  accepted: 
                    type: "boolean"
                  closed: 
                    type: "object"
                    required: 
                      - "reason"
                    properties: 
                      reason: 
                        type: "string"
                        enum: 
                          - "closed"
                          - "completed"
                      closedAt: 
                        type: "string"
                        format: "date-time"
                  receiver: 
                    oneOf: 
                      - 
                        title: "Role receiver"
                        type: "object"
                        required: 
                          - "type"
                          - "id"
                        properties: 
                          type: 
                            type: "string"
                            enum: 
                              - "role"
                          id: 
                            type: "string"
                      - 
                        title: "Self receiver"
                        type: "object"
                        required: 
                          - "type"
                          - "id"
                        properties: 
                          type: 
                            type: "string"
                            enum: 
                              - "self"
                          id: 
                            type: "string"
                  location: 
                    oneOf: 
                      - 
                        title: "Station location"
                        type: "object"
                        additionalProperties: false
                        required: 
                          - "type"
                          - "id"
                        properties: 
                          type: 
                            type: "string"
                            enum: 
                              - "station"
                          id: 
                            type: "string"
                      - 
                        title: "Room location"
                        type: "object"
                        additionalProperties: false
                        required: 
                          - "type"
                          - "id"
                        properties: 
                          type: 
                            type: "string"
                            enum: 
                              - "room"
                          id: 
                            type: "string"
                      - 
                        title: "Bed location"
                        type: "object"
                        additionalProperties: false
                        required: 
                          - "type"
                          - "id"
                        properties: 
                          type: 
                            type: "string"
                            enum: 
                              - "bed"
                          id: 
                            type: "string"
                  dueDate: 
                    type: "string"
                    format: "date-time"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/TaskDTODefault"
          208: 
            description: "Task is already completed"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                    - "closed"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "already-completed"
                        - "already-closed"
                    closed: 
                      $ref: "#/components/schemas/TaskClosedDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "task-completion-cant-be-undone"
                        - "task-not-found-or-already-completed"
                        - "cant-reassign"
                        - "already-abandoned"
                        - "invalid-arguments"
          403: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          404: 
            description: "Requested task not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /tasks/{id}/messages: 
      post: 
        summary: "Create a task message"
        parameters: 
          - 
            description: "ID of the task message should be sent to"
            name: "id"
            in: "path"
            schema: 
              type: "string"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST Task messages body schema"
                type: "object"
                additionalProperties: false
                required: 
                  - "text"
                properties: 
                  _id: 
                    type: "string"
                  text: 
                    type: "string"
                  i18nId: 
                    type: "string"
                  encrypted: 
                    type: "boolean"
        responses: 
          200: 
            description: "Success"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/TaskMessage"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          409: 
            description: "Conflict"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "already-exists"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      get: 
        summary: "Get all task messages"
        parameters: 
          - 
            description: "ID of the task"
            name: "id"
            in: "path"
            schema: 
              type: "string"
            required: true
        responses: 
          200: 
            description: "OK"
            headers: 
              X-Total-Count: 
                schema: 
                  type: "integer"
            content: 
              application/json: 
                schema: 
                  type: "array"
                  items: 
                    $ref: "#/components/schemas/TaskMessage"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /tasks/{taskId}/receivedBy: 
      post: 
        summary: "Mark task received by user"
        parameters: 
          - 
            name: "taskId"
            in: "path"
            required: true
            schema: 
              type: "string"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST /tasks/:id/receivedBy body"
                type: "object"
                required: 
                  - "userId"
                additionalProperties: false
                properties: 
                  userId: 
                    type: "string"
        responses: 
          201: 
            description: "User id added to receivedBy list"
            content: 
              application/json: 
                schema: 
                  type: "object"
          208: 
            description: "User id is already in receivedBy list"
            content: 
              application/json: 
                schema: 
                  type: "object"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          403: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
                        - "forbidden"
          404: 
            description: "Task not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /projects: 
      get: 
        operationId: "getProjects"
        summary: "Get projects"
        parameters: 
          - 
            name: "offset"
            in: "query"
            required: false
            schema: 
              type: "number"
              minimum: 0
              default: 0
          - 
            name: "limit"
            in: "query"
            required: false
            schema: 
              type: "number"
              minimum: 1
              default: 10
        responses: 
          200: 
            description: "OK"
            headers: 
              X-Total-Count: 
                schema: 
                  type: "integer"
            content: 
              application/json: 
                schema: 
                  type: "array"
                  items: 
                    $ref: "#/components/schemas/ProjectDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /projects/{id}: 
      get: 
        operationId: "getProject"
        summary: "Get project"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            schema: 
              type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/ProjectDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      patch: 
        summary: "Update project"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            schema: 
              type: "string"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "PATCH /projects body"
                type: "object"
                required: []
                additionalProperties: false
                properties: 
                  closed: 
                    type: "object"
                    required: 
                      - "reason"
                    properties: 
                      reason: 
                        type: "string"
                        enum: 
                          - "cancelled"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/ProjectDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          403: 
            description: "Forbidden"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "forbidden"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /icons/{id}: 
      get: 
        summary: "Get Icon"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            schema: 
              type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  required: 
                    - "_id"
                    - "name"
                    - "svgData"
                    - "pngData"
                    - "createdAt"
                  properties: 
                    _id: 
                      type: "string"
                    name: 
                      type: "string"
                    svgData: 
                      type: "string"
                    pngData: 
                      type: "string"
                    createdAt: 
                      type: "string"
                      format: "date-time"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "icon-not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /tasktypes/containers: 
      get: 
        summary: "Get task container types"
        parameters: 
          - 
            name: "offset"
            in: "query"
            schema: 
              type: "integer"
              default: 0
          - 
            name: "limit"
            in: "query"
            schema: 
              type: "integer"
              default: 10
              maximum: 100
          - 
            name: "hospitalId"
            in: "query"
            schema: 
              type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "array"
                  items: 
                    $ref: "#/components/schemas/TaskContainerType"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      post: 
        summary: "Post task container type"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST /tasktypes/containers/:id body"
                type: "object"
                required: 
                  - "_id"
                  - "name"
                  - "hospitalId"
                  - "stationIdsAvailableFor"
                  - "initiators"
                additionalProperties: false
                properties: 
                  _id: 
                    type: "string"
                  name: 
                    type: "string"
                  hospitalId: 
                    type: "string"
                  stationIdsAvailableFor: 
                    type: "array"
                    items: 
                      type: "string"
                  initiators: 
                    type: "object"
                    required: 
                      - "roleIds"
                    additionalProperties: false
                    properties: 
                      roleIds: 
                        type: "array"
                        items: 
                          type: "string"
        responses: 
          201: 
            description: "Created"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/TaskContainerType"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  required: 
                    - "status"
                  additionalProperties: false
                  properties: 
                    status: 
                      type: "string"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /tasktypes/containers/{id}: 
      get: 
        summary: "Get task container type"
        parameters: 
          - 
            name: "id"
            in: "path"
            schema: 
              type: "string"
            required: true
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/TaskContainerType"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  required: 
                    - "status"
                  additionalProperties: false
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      patch: 
        summary: "Get task container type"
        parameters: 
          - 
            name: "id"
            in: "path"
            schema: 
              type: "string"
            required: true
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "Task container type patch DTO"
                type: "object"
                additionalProperties: false
                properties: 
                  name: 
                    type: "string"
                  iconId: 
                    type: "string"
                    nullable: true
                  stationIdsAvailableFor: 
                    type: "array"
                    items: 
                      type: "string"
                  initiators: 
                    type: "object"
                    required: 
                      - "roleIds"
                    additionalProperties: false
                    properties: 
                      roleIds: 
                        type: "array"
                        items: 
                          type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/TaskContainerType"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  required: 
                    - "status"
                  additionalProperties: false
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      delete: 
        summary: "Delete task container type"
        parameters: 
          - 
            name: "id"
            in: "path"
            schema: 
              type: "string"
            required: true
        responses: 
          200: 
            description: "Deleted"
            content: 
              application/json: 
                schema: 
                  type: "object"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /tasktypes/containers/{containerId}/subtasks: 
      post: 
        summary: "Post task container subtask type"
        parameters: 
          - 
            name: "containerId"
            in: "path"
            schema: 
              type: "string"
            required: true
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "Task container subtask type post DTO"
                type: "object"
                required: 
                  - "_id"
                  - "name"
                  - "isOptional"
                  - "prevIds"
                  - "location"
                  - "target"
                additionalProperties: false
                properties: 
                  _id: 
                    type: "string"
                  name: 
                    type: "string"
                  isOptional: 
                    type: "boolean"
                  prevIds: 
                    type: "array"
                    items: 
                      type: "string"
                  location: 
                    type: "object"
                    required: 
                      - "type"
                      - "title"
                      - "stationTitle"
                      - "hint"
                      - "stationHint"
                    additionalProperties: false
                    properties: 
                      type: 
                        type: "string"
                        enum: 
                          - "user-defined"
                      title: 
                        type: "string"
                      stationTitle: 
                        type: "string"
                      hint: 
                        type: "string"
                      stationHint: 
                        type: "string"
                  target: 
                    type: "object"
                    required: 
                      - "type"
                      - "roleIds"
                    additionalProperties: false
                    properties: 
                      type: 
                        type: "string"
                        enum: 
                          - "admin-defined"
                      roleIds: 
                        type: "array"
                        items: 
                          type: "string"
        responses: 
          201: 
            description: "Created"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/TaskContainerSubtaskType"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /tasktypes/containers/{containerId}/subtasks/{subtaskId}: 
      patch: 
        summary: "Patch task container subtask type"
        parameters: 
          - 
            name: "containerId"
            in: "path"
            schema: 
              type: "string"
            required: true
          - 
            name: "subtaskId"
            in: "path"
            schema: 
              type: "string"
            required: true
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "Task container subtask type patch DTO"
                type: "object"
                required: []
                additionalProperties: false
                properties: 
                  name: 
                    type: "string"
                  isOptional: 
                    type: "boolean"
                  prevIds: 
                    type: "array"
                    items: 
                      type: "string"
                  location: 
                    oneOf: 
                      - 
                        title: "User-defined location"
                        type: "object"
                        required: 
                          - "type"
                          - "title"
                          - "stationTitle"
                          - "hint"
                          - "stationHint"
                        additionalProperties: false
                        properties: 
                          type: 
                            type: "string"
                            enum: 
                              - "user-defined"
                          title: 
                            type: "string"
                          stationTitle: 
                            type: "string"
                          hint: 
                            type: "string"
                          stationHint: 
                            type: "string"
                      - 
                        title: "Admin-defined location"
                        type: "object"
                        required: 
                          - "type"
                          - "value"
                        additionalProperties: false
                        properties: 
                          type: 
                            type: "string"
                            enum: 
                              - "admin-defined"
                          value: 
                            type: "object"
                            required: 
                              - "type"
                              - "id"
                            additionalProperties: false
                            properties: 
                              type: 
                                type: "string"
                                enum: 
                                  - "station"
                                  - "room"
                                  - "bed"
                              id: 
                                type: "string"
                      - 
                        title: "Inherited location"
                        type: "object"
                        required: 
                          - "type"
                          - "subtaskTypeId"
                        additionalProperties: false
                        properties: 
                          type: 
                            type: "string"
                            enum: 
                              - "from-subtask"
                          subtaskTypeId: 
                            type: "string"
                  target: 
                    type: "object"
                    required: 
                      - "type"
                      - "roleIds"
                    additionalProperties: false
                    properties: 
                      type: 
                        type: "string"
                        enum: 
                          - "admin-defined"
                      roleIds: 
                        type: "array"
                        items: 
                          type: "string"
        responses: 
          200: 
            description: "Updated"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/TaskContainerSubtaskType"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      delete: 
        summary: "Delete task container subtask type"
        parameters: 
          - 
            name: "containerId"
            in: "path"
            schema: 
              type: "string"
            required: true
          - 
            name: "subtaskId"
            in: "path"
            schema: 
              type: "string"
            required: true
        responses: 
          200: 
            description: "Deleted"
            content: 
              application/json: 
                schema: 
                  type: "object"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /tasktypes: 
      post: 
        summary: "Create a Tasktype"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST /tasktypes body"
                type: "object"
                required: 
                  - "name"
                additionalProperties: false
                properties: 
                  name: 
                    type: "string"
                    minLength: 1
                  expiresAfter: 
                    description: "How many milliseconds after the due date the task will be automatically closed"
                    type: "number"
                    minimum: 60000
        responses: 
          201: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/TasktypeDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /tasktypes/{id}: 
      patch: 
        summary: "Update tasktype"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            schema: 
              type: "string"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "PATCH /tasktypes body"
                type: "object"
                required: []
                additionalProperties: false
                properties: 
                  expiresAfter: 
                    nullable: true
                    type: "number"
                    minimum: 60000
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/TasktypeDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /menuitems: 
      post: 
        summary: "Create a Menuitem"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST /menuitems body"
                type: "object"
                required: 
                  - "name"
                additionalProperties: false
                properties: 
                  name: 
                    type: "string"
                    minLength: 1
        responses: 
          201: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/MenuitemDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /shifts: 
      post: 
        summary: "Start a shift"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST /shifts body"
                type: "object"
                required: 
                  - "user"
                  - "role"
                  - "location"
                additionalProperties: false
                properties: 
                  user: 
                    type: "object"
                    additionalProperties: false
                    properties: 
                      nickname: 
                        type: "string"
                  role: 
                    type: "object"
                    required: 
                      - "id"
                    additionalProperties: false
                    properties: 
                      id: 
                        type: "string"
                  location: 
                    oneOf: 
                      - 
                        title: "Manual choice"
                        type: "object"
                        required: 
                          - "type"
                          - "bedIds"
                        additionalProperties: false
                        properties: 
                          type: 
                            type: "string"
                            enum: 
                              - "manual"
                          bedIds: 
                            type: "array"
                            items: 
                              type: "string"
                          areaName: 
                            title: "Temporary prop to define custom area names. Should be removed in favor of more strict choise options like list of station ids or all areas without specification of bed ids"
                            type: "string"
                      - 
                        title: "Station"
                        type: "object"
                        required: 
                          - "type"
                          - "stationId"
                        additionalProperties: false
                        properties: 
                          type: 
                            type: "string"
                            enum: 
                              - "station"
                          stationId: 
                            type: "string"
                      - 
                        title: "Area"
                        type: "object"
                        required: 
                          - "type"
                          - "areaId"
                        additionalProperties: false
                        properties: 
                          type: 
                            type: "string"
                            enum: 
                              - "area"
                          areaId: 
                            type: "string"
                      - 
                        type: "array"
                        items: 
                          oneOf: 
                            - 
                              title: "Station"
                              type: "object"
                              additionalProperties: false
                              required: 
                                - "type"
                                - "id"
                              properties: 
                                type: 
                                  type: "string"
                                  enum: 
                                    - "station"
                                id: 
                                  type: "string"
                            - 
                              title: "Area"
                              type: "object"
                              additionalProperties: false
                              required: 
                                - "type"
                                - "id"
                              properties: 
                                type: 
                                  type: "string"
                                  enum: 
                                    - "area"
                                id: 
                                  type: "string"
                            - 
                              title: "Room"
                              type: "object"
                              additionalProperties: false
                              required: 
                                - "type"
                                - "id"
                              properties: 
                                type: 
                                  type: "string"
                                  enum: 
                                    - "room"
                                id: 
                                  type: "string"
                            - 
                              title: "Bed"
                              type: "object"
                              additionalProperties: false
                              required: 
                                - "type"
                                - "id"
                              properties: 
                                type: 
                                  type: "string"
                                  enum: 
                                    - "bed"
                                id: 
                                  type: "string"
                            - 
                              title: "Room within area"
                              type: "object"
                              additionalProperties: false
                              required: 
                                - "type"
                                - "id"
                                - "areaId"
                              properties: 
                                type: 
                                  type: "string"
                                  enum: 
                                    - "room"
                                id: 
                                  type: "string"
                                areaId: 
                                  type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  required: 
                    - "id"
                  additionalProperties: false
                  properties: 
                    id: 
                      type: "string"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /shifts/{id}: 
      patch: 
        summary: "Update shift"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            schema: 
              type: "string"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "PATCH /shifts body"
                type: "object"
                additionalProperties: false
                properties: 
                  isOpen: 
                    type: "boolean"
                    enum: 
                      - false
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-due-date-format"
                        - "patient-message-encryption-disallowed"
                        - "invalid-arguments"
          403: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
                        - "patient-not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /organizations: 
      get: 
        summary: "get /organizations"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "array"
                  items: 
                    $ref: "#/components/schemas/OrganizationDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          403: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      post: 
        summary: "post /organizations"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST organizations body"
                type: "object"
                required: 
                  - "name"
                additionalProperties: false
                properties: 
                  name: 
                    type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/OrganizationDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          403: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /hospitals: 
      post: 
        summary: "Create a Hospital"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST /hospitals body"
                type: "object"
                required: 
                  - "name"
                additionalProperties: false
                properties: 
                  name: 
                    type: "string"
                    minLength: 1
        responses: 
          201: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/HospitalDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      get: 
        summary: "Find all Hospitals"
        responses: 
          200: 
            description: "OK"
            headers: 
              X-Total-Count: 
                schema: 
                  type: "integer"
                required: true
            content: 
              application/json: 
                schema: 
                  type: "array"
                  items: 
                    $ref: "#/components/schemas/HospitalDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          403: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /hospitals/{id}: 
      get: 
        summary: "Find a Hospital"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            schema: 
              type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/HospitalDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          403: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          404: 
            description: "Requested hospital not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /areas: 
      post: 
        summary: "Create an Area"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST /areas body"
                type: "object"
                required: 
                  - "name"
                  - "stationId"
                additionalProperties: false
                properties: 
                  name: 
                    type: "string"
                    minLength: 1
                  stationId: 
                    type: "string"
        responses: 
          201: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/AreaDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          403: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /stations: 
      get: 
        operationId: "getStations"
        summary: "Get stations"
        parameters: 
          - 
            name: "hospitalIds"
            in: "query"
            required: false
            schema: 
              type: "string"
          - 
            name: "offset"
            in: "query"
            required: false
            schema: 
              type: "number"
              minimum: 0
              default: 0
          - 
            name: "limit"
            in: "query"
            required: false
            schema: 
              type: "number"
              minimum: 1
              default: 10
        responses: 
          200: 
            description: "OK"
            headers: 
              X-Total-Count: 
                schema: 
                  type: "integer"
            content: 
              application/json: 
                schema: 
                  type: "array"
                  items: 
                    $ref: "#/components/schemas/StationDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      post: 
        summary: "Create a Station"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST /stations body"
                type: "object"
                required: 
                  - "name"
                  - "hospitalId"
                additionalProperties: false
                properties: 
                  name: 
                    type: "string"
                    minLength: 1
                  hospitalId: 
                    type: "string"
                  meetingTimes: 
                    type: "array"
                    items: 
                      type: "object"
        responses: 
          201: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/StationDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "hospital-not-found"
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /rooms: 
      post: 
        summary: "Create a Room"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST /rooms body"
                type: "object"
                required: 
                  - "name"
                  - "stationId"
                additionalProperties: false
                properties: 
                  name: 
                    type: "string"
                    minLength: 1
                  stationId: 
                    type: "string"
        responses: 
          201: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/RoomDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      get: 
        operationId: "getRooms"
        summary: "Get rooms"
        parameters: 
          - 
            name: "stationIds"
            in: "query"
            schema: 
              type: "string"
          - 
            name: "offset"
            in: "query"
            required: false
            schema: 
              type: "number"
              minimum: 0
              default: 0
          - 
            name: "limit"
            in: "query"
            required: false
            schema: 
              type: "number"
              minimum: 1
              default: 10
        responses: 
          200: 
            description: "OK"
            headers: 
              X-Total-Count: 
                schema: 
                  type: "integer"
            content: 
              application/json: 
                schema: 
                  type: "array"
                  items: 
                    $ref: "#/components/schemas/RoomDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /rooms/{id}: 
      get: 
        operationId: "getRoom"
        summary: "Get room"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            schema: 
              type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/RoomDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /beds: 
      get: 
        operationId: "getBeds"
        summary: "Get beds"
        parameters: 
          - 
            name: "stationIds"
            in: "query"
            schema: 
              type: "string"
          - 
            name: "roomIds"
            in: "query"
            schema: 
              type: "string"
          - 
            name: "offset"
            in: "query"
            required: false
            schema: 
              type: "number"
              minimum: 0
              default: 0
          - 
            name: "limit"
            in: "query"
            required: false
            schema: 
              type: "number"
              minimum: 1
              default: 10
        responses: 
          200: 
            description: "OK"
            headers: 
              X-Total-Count: 
                schema: 
                  type: "integer"
            content: 
              application/json: 
                schema: 
                  type: "array"
                  items: 
                    $ref: "#/components/schemas/BedDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      post: 
        summary: "Create a Bed"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST /beds body"
                type: "object"
                required: 
                  - "name"
                  - "roomId"
                additionalProperties: false
                properties: 
                  name: 
                    type: "string"
                    minLength: 1
                  roomId: 
                    type: "string"
        responses: 
          201: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/BedDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          403: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /beds/{id}: 
      get: 
        operationId: "getBed"
        summary: "Get bed"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            schema: 
              type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/BedDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      patch: 
        summary: "Toggle Bed isActive"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            schema: 
              type: "string"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "PATCH /beds body"
                type: "object"
                additionalProperties: false
                properties: 
                  isActive: 
                    type: "boolean"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/BedDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /beds/{id}/integrations/trifact: 
      get: 
        summary: "Get bed Trifact integration info"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            schema: 
              type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/TrifactIntegrationBedInfo"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      put: 
        summary: "Update bed Trifact integration info"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            schema: 
              type: "string"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "PUT /beds/{bedId}/integrations/trifact body"
                type: "object"
                additionalProperties: false
                required: 
                  - "id"
                properties: 
                  id: 
                    type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/TrifactIntegrationBedInfo"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      delete: 
        summary: "Delete bed Trifact integration info"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            schema: 
              type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "object"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /roles: 
      post: 
        summary: "Create a Role"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST /roles body"
                type: "object"
                required: 
                  - "hospitalId"
                  - "name"
                  - "price"
                additionalProperties: false
                properties: 
                  hospitalId: 
                    type: "string"
                  name: 
                    type: "string"
                  price: 
                    type: "number"
                    minimum: 0
                  tasktypes: 
                    type: "array"
                    items: 
                      type: "string"
                  tasktypesAllowedToCreate: 
                    type: "array"
                    items: 
                      type: "string"
                  menuitems: 
                    type: "array"
                    items: 
                      type: "string"
        responses: 
          201: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/RoleDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          403: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /users: 
      post: 
        summary: "Create a User"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST /users body"
                type: "object"
                required: 
                  - "hospitalId"
                  - "username"
                additionalProperties: false
                properties: 
                  hospitalId: 
                    type: "string"
                  username: 
                    type: "string"
                    minLength: 1
                  roles: 
                    type: "array"
                    items: 
                      type: "string"
                  stations: 
                    type: "array"
                    items: 
                      type: "string"
        responses: 
          201: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/UserDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          403: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /users/{id}: 
      patch: 
        summary: "Update User"
        parameters: 
          - 
            name: "id"
            in: "path"
            required: true
            schema: 
              type: "string"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "PATCH /users body"
                type: "object"
                required: []
                additionalProperties: false
                properties: 
                  isHidden: 
                    type: "boolean"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/UserDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /users/{userId}/devices/{deviceId}: 
      put: 
        summary: "Update push token device"
        parameters: 
          - 
            name: "userId"
            in: "path"
            required: true
            schema: 
              type: "string"
          - 
            name: "deviceId"
            in: "path"
            required: true
            schema: 
              type: "string"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "PUT /users/:userId/devices/:deviceId body"
                type: "object"
                additionalProperties: false
                properties: 
                  push: 
                    type: "object"
                    additionalProperties: false
                    required: 
                      - "type"
                      - "token"
                    properties: 
                      type: 
                        type: "string"
                        enum: 
                          - "android"
                          - "ios"
                      token: 
                        type: "string"
                  locale: 
                    type: "string"
                    enum: 
                      - "en"
                      - "de"
        responses: 
          201: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "success"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /patients: 
      post: 
        summary: "Create a Patient"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST /patients body"
                type: "object"
                required: 
                  - "code"
                additionalProperties: false
                properties: 
                  code: 
                    type: "string"
        responses: 
          201: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/PatientDTODefault"
          400: 
            description: "Bad request"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-bed-code"
                        - "invalid-arguments"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /patient/feedback: 
      post: 
        summary: "Submit a feedback"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST /patient/feedback body"
                type: "object"
                required: 
                  - "location"
                  - "feedback"
                additionalProperties: false
                properties: 
                  location: 
                    type: "object"
                    required: 
                      - "hospitalId"
                      - "bedId"
                    additionalProperties: false
                    properties: 
                      hospitalId: 
                        type: "string"
                      bedId: 
                        type: "string"
                  feedback: 
                    type: "object"
                    required: 
                      - "rating"
                      - "message"
                    additionalProperties: false
                    properties: 
                      rating: 
                        type: "number"
                        minimum: 1
                        maximum: 5
                      message: 
                        type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "_id"
                  properties: 
                    _id: 
                      type: "string"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "hospital-doesnt-exist"
                        - "terminal-doesnt-exist"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /patient/menu/{hospitalId}/{stationId}: 
      get: 
        summary: "Get Menu items by hospitalId and stationId"
        parameters: 
          - 
            name: "hospitalId"
            in: "path"
            required: true
            schema: 
              type: "string"
          - 
            name: "stationId"
            in: "path"
            required: true
            schema: 
              type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "array"
                  items: 
                    $ref: "#/components/schemas/MenuDTOPatient"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "hospital-not-found"
                        - "station-not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /patient/menu/preview/{hospitalId}/{stationId}: 
      get: 
        summary: "Get Menu items preview by hospitalId and stationId"
        parameters: 
          - 
            name: "hospitalId"
            in: "path"
            required: true
            schema: 
              type: "string"
          - 
            name: "stationId"
            in: "path"
            required: true
            schema: 
              type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "array"
                  items: 
                    $ref: "#/components/schemas/MenuitemPreviewDTOPatient"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "hospital-not-found"
                        - "station-not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /patient/{hospitalId}/{stationName}/{roomName}/{bedName}: 
      get: 
        summary: "Get patient location By hospitalId, stationName, roomName and bedId"
        parameters: 
          - 
            name: "hospitalId"
            in: "path"
            required: true
            schema: 
              type: "string"
          - 
            name: "stationName"
            in: "path"
            required: true
            schema: 
              type: "string"
          - 
            name: "roomName"
            in: "path"
            required: true
            schema: 
              type: "string"
          - 
            name: "bedName"
            in: "path"
            required: true
            schema: 
              type: "string"
          - 
            name: "useHISNames"
            in: "query"
            required: false
            schema: 
              type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/PatientLocationDTOPatient"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "hospital-not-found"
                        - "station-not-found"
                        - "room-not-found"
                        - "bed-not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /terminal/{hospitalId}/{terminalId}: 
      get: 
        summary: "Get terminal location By hospitalId and terminalId"
        parameters: 
          - 
            name: "hospitalId"
            in: "path"
            required: true
            schema: 
              type: "string"
          - 
            name: "terminalId"
            in: "path"
            required: true
            schema: 
              type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/TerminalLocationDTOPatient"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "bed-not-found"
                        - "station-not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /terminal/{terminalId}: 
      get: 
        summary: "Get terminal location By terminalId"
        parameters: 
          - 
            name: "terminalId"
            in: "path"
            required: true
            schema: 
              type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/TerminalLocationDTOPatient"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "terminal-not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /patient/requests/{hospitalId}/{bedId}: 
      get: 
        summary: "Get patient requests By hospitalId, and bedId"
        parameters: 
          - 
            name: "hospitalId"
            in: "path"
            required: true
            schema: 
              type: "string"
          - 
            name: "bedId"
            in: "path"
            required: true
            schema: 
              type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "array"
                  items: 
                    $ref: "#/components/schemas/RequestDTOPatient"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "location-doesnt-match-any-bed"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /patient/requests/{requestId}: 
      get: 
        summary: "Get patient request By requestId"
        parameters: 
          - 
            name: "requestId"
            in: "path"
            required: true
            schema: 
              type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/RequestDTOPatient"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "task-not-found-or-expired"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      patch: 
        summary: "Update patient request"
        parameters: 
          - 
            name: "requestId"
            in: "path"
            required: true
            schema: 
              type: "string"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "PATCH patient request body"
                type: "object"
                additionalProperties: false
                properties: 
                  isThanks: 
                    type: "boolean"
                  isCancel: 
                    type: "boolean"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/RequestDTOPatient"
          400: 
            description: "Bad request"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "task-cant-be-updated"
                        - "invalid-arguments"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "task-not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /patient/requests: 
      post: 
        summary: "Insert patient request"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST patient request body"
                type: "object"
                additionalProperties: false
                required: 
                  - "menuitemId"
                  - "location"
                  - "options"
                  - "timeZoneOffset"
                properties: 
                  menuitemId: 
                    type: "string"
                  location: 
                    oneOf: 
                      - 
                        title: "Patient location"
                        type: "object"
                        required: 
                          - "hospitalId"
                          - "bedId"
                        additionalProperties: false
                        properties: 
                          hospitalId: 
                            type: "string"
                          bedId: 
                            type: "string"
                      - 
                        title: "Patient location by terminal and hospital"
                        type: "object"
                        required: 
                          - "hospitalId"
                          - "terminalId"
                        additionalProperties: false
                        properties: 
                          hospitalId: 
                            type: "string"
                          terminalId: 
                            type: "string"
                      - 
                        title: "Patient location by names"
                        type: "object"
                        required: 
                          - "hospitalId"
                          - "stationName"
                          - "roomName"
                          - "bedName"
                        additionalProperties: false
                        properties: 
                          hospitalId: 
                            type: "string"
                          stationName: 
                            type: "string"
                          roomName: 
                            type: "string"
                          bedName: 
                            type: "string"
                  options: 
                    type: "object"
                    additionalProperties: false
                    properties: 
                      message: 
                        type: "string"
                      pain: 
                        type: "number"
                  timeZoneOffset: 
                    type: "number"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/RequestDTOPatient"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "menuitem-not-found"
                        - "location-doesnt-match-any-bed"
          429: 
            description: "Many requests"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                    - "details"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "too-many-requests"
                    details: 
                      type: "string"
                      enum: 
                        - "max1RequestIn10s"
                        - "max5RequestsIn20m"
                        - "max50RequestsIn24h"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /patient/requests/{requestId}/messages: 
      post: 
        summary: "Insert patient request message"
        parameters: 
          - 
            name: "requestId"
            in: "path"
            required: true
            schema: 
              type: "string"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST patient request message body"
                type: "object"
                additionalProperties: false
                required: 
                  - "text"
                properties: 
                  text: 
                    type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/TaskMessageDTOPatient"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "task-not-found"
          409: 
            description: "Already exists"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "already-exists"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /flow/notifications/test: 
      post: 
        summary: "Test Remote Notification"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /flow/robotise/emergency: 
      get: 
        summary: "Robotise emergency"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "object"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          404: 
            description: "No emergency"
            content: 
              application/json: 
                schema: 
                  type: "object"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      post: 
        summary: "Turn emergency on"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST /flow/robotise/emergency body"
                type: "object"
                additionalProperties: false
                properties: {}
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "object"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          403: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      delete: 
        summary: "Turn emergency off"
        requestBody: 
          content: 
            application/json: 
              schema: 
                type: "object"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "object"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /flow/logs: 
      post: 
        summary: "Create a log"
        requestBody: 
          content: 
            application/json: 
              schema: 
                oneOf: 
                  - 
                    $ref: "#/components/schemas/FlowLogsVideoViewRequestBody"
                  - 
                    $ref: "#/components/schemas/FlowLogsActivityRequestBody"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "_id"
                  properties: 
                    _id: 
                      type: "string"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /robotise/drawers: 
      post: 
        summary: "POST Robotise drawer"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST robotise drawers body"
                type: "object"
                additionalProperties: false
                required: 
                  - "requestId"
                properties: 
                  requestId: 
                    type: "string"
        responses: 
          201: 
            description: "Created"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/RobotiseDrawerDTO"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "request-not-found"
                        - "invalid-arguments"
          409: 
            description: "Already exists"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "already-exists"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /robotise/drawers/{requestId}: 
      get: 
        summary: "Robotise drawer"
        parameters: 
          - 
            name: "requestId"
            in: "path"
            required: true
            schema: 
              type: "string"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/RobotiseDrawerDTO"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          404: 
            description: "No drawer available"
            content: 
              application/json: 
                schema: 
                  type: "object"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      patch: 
        summary: "PATCH Robotise drawer"
        parameters: 
          - 
            name: "requestId"
            in: "path"
            required: true
            schema: 
              type: "string"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "PATCH Robotise drawer body"
                type: "object"
                additionalProperties: false
                properties: 
                  isOpen: 
                    type: "boolean"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/RobotiseDrawerDTO"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          404: 
            description: "No drawer available"
            content: 
              application/json: 
                schema: 
                  type: "object"
          409: 
            description: "Conflict"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "cant-be-reopened"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /robotise/robot: 
      get: 
        summary: "Robotise robot state"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "isBeingCleaned"
                    - "isBeingRefilled"
                  properties: 
                    isBeingCleaned: 
                      type: "boolean"
                    isBeingRefilled: 
                      type: "boolean"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          404: 
            description: "Not Found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      post: 
        summary: "Create Robotise robot"
        responses: 
          201: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/RobotiseRobotDTO"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          409: 
            description: "Already exists"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "already-exists"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      patch: 
        summary: "Patch robotise robot state"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "PATCH /flow/robotise/robot body"
                type: "object"
                additionalProperties: false
                properties: 
                  isBeingCleaned: 
                    type: "boolean"
                  isBeingRefilled: 
                    type: "boolean"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/RobotiseRobotDTO"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          404: 
            description: "Not Found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          409: 
            description: "Conflict"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "cant-be-cleaned-during-emergency"
                        - "cant-be-cleaned-during-refilling"
                        - "cant-be-refilled-during-emergency"
                        - "cant-be-refilled-during-cleaning"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /messages: 
      post: 
        summary: "Post a new message"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST messages body"
                type: "object"
                required: 
                  - "content"
                  - "receiverId"
                additionalProperties: false
                properties: 
                  id: 
                    type: "string"
                  content: 
                    oneOf: 
                      - 
                        type: "string"
                      - 
                        title: "Encrypted text content"
                        type: "object"
                        required: 
                          - "type"
                          - "text"
                          - "key"
                        properties: 
                          type: 
                            type: "string"
                            enum: 
                              - "encrypted"
                          text: 
                            type: "string"
                          key: 
                            type: "string"
                            enum: 
                              - "flow-user-defined"
                              - "email-parser"
                  receiverId: 
                    type: "string"
                  sentAt: 
                    type: "string"
                    format: "date-time"
                  createdAt: 
                    type: "string"
                    format: "date-time"
        responses: 
          200: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  $ref: "#/components/schemas/MessageDTODefault"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          409: 
            description: "Already exists"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "already-exists"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
      patch: 
        summary: "Update messages"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "PATCH messages body"
                type: "array"
                items: 
                  type: "object"
                  required: 
                    - "id"
                  additionalProperties: false
                  properties: 
                    id: 
                      type: "string"
                    seenAt: 
                      type: "string"
                      format: "date-time"
                    seen: 
                      type: "boolean"
        responses: 
          202: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "accepted"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /notifications: 
      patch: 
        summary: "Update notifications"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "PATCH notifications body"
                type: "array"
                items: 
                  type: "object"
                  required: 
                    - "id"
                    - "receivedAt"
                    - "token"
                  additionalProperties: false
                  properties: 
                    id: 
                      type: "string"
                    receivedAt: 
                      type: "string"
                      format: "date-time"
                    token: 
                      type: "string"
                    appState: 
                      type: "string"
                    googleMessageId: 
                      type: "string"
                    googleOriginalPriority: 
                      type: "string"
                    googleDeliveredPriority: 
                      type: "string"
                    googleSentTime: 
                      type: "number"
                    googleTTL: 
                      type: "number"
        responses: 
          202: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "accepted"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          401: 
            description: "Unauthorized"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unauthorized"
          404: 
            description: "Not found"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "not-found"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
    /debug/report: 
      post: 
        operationId: "postDebugReport"
        summary: "Post debug report"
        requestBody: 
          content: 
            application/json: 
              schema: 
                title: "POST /debug/report body"
                type: "object"
        responses: 
          201: 
            description: "OK"
            content: 
              application/json: 
                schema: 
                  type: "object"
          400: 
            description: "Invalid input"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "invalid-arguments"
          500: 
            description: "Unexpected error"
            content: 
              application/json: 
                schema: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "status"
                  properties: 
                    status: 
                      type: "string"
                      enum: 
                        - "unexpected-error"
  components: 
    schemas: 
      TaskDTODefault: 
        title: "Task"
        type: "object"
        required: 
          - "_id"
          - "tasktype"
          - "receiver"
          - "location"
          - "closed"
          - "assignedTo"
          - "actions"
          - "accepted"
          - "receivedBy"
        properties: 
          _id: 
            type: "string"
          tasktype: 
            type: "object"
            required: 
              - "name"
            properties: 
              name: 
                type: "string"
          receiver: 
            oneOf: 
              - 
                type: "object"
                additionalProperties: false
                required: 
                  - "stationId"
                properties: 
                  stationId: 
                    type: "string"
              - 
                type: "object"
                additionalProperties: false
                required: 
                  - "roleId"
                properties: 
                  roleId: 
                    type: "string"
              - 
                type: "object"
                additionalProperties: false
                required: 
                  - "userId"
                properties: 
                  userId: 
                    type: "string"
          location: 
            $ref: "#/components/schemas/TaskLocationDTODefault"
          closed: 
            $ref: "#/components/schemas/TaskClosedDTODefault"
            nullable: true
          relationships: 
            type: "object"
            properties: 
              rootTaskId: 
                type: "string"
          assignedTo: 
            type: "array"
            items: 
              type: "string"
          accepted: 
            type: "boolean"
          acceptedBy: 
            type: "object"
            additionalProperties: false
            required: 
              - "userId"
              - "roleId"
              - "username"
              - "areaId"
              - "areaName"
            properties: 
              userId: 
                type: "string"
              roleId: 
                type: "string"
              areaId: 
                type: "string"
              username: 
                type: "string"
              areaName: 
                type: "string"
              nickname: 
                type: "string"
          receivedBy: 
            description: "List of user ids who confirmed the task is received by them"
            type: "array"
            items: 
              type: "string"
          actions: 
            type: "array"
            items: 
              title: "Task action"
              oneOf: 
                - 
                  title: "Task Create task action"
                  type: "object"
                  required: 
                    - "_id"
                    - "type"
                    - "payload"
                    - "date"
                  properties: 
                    _id: 
                      type: "string"
                    type: 
                      enum: 
                        - "create"
                    payload: 
                      type: "object"
                      required: 
                        - "areThereUsersOnlineToBeAssigned"
                        - "receiverRoleName"
                        - "isCheapestRoleAssigned"
                        - "cheaperRoleNames"
                      properties: 
                        areThereUsersOnlineToBeAssigned: 
                          type: "boolean"
                        receiverRoleName: 
                          type: "string"
                        isCheapestRoleAssigned: 
                          type: "boolean"
                        cheaperRoleNames: 
                          type: "array"
                          items: 
                            type: "string"
                    date: 
                      type: "string"
                      format: "datetime"
                - 
                  title: "Task Accept task action"
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "_id"
                    - "type"
                    - "payload"
                    - "date"
                  properties: 
                    _id: 
                      type: "string"
                    type: 
                      enum: 
                        - "accept"
                    payload: 
                      type: "object"
                      additionalProperties: false
                      required: 
                        - "accepteeUserId"
                        - "isRepeated"
                      properties: 
                        accepteeUserId: 
                          type: "string"
                        isRepeated: 
                          type: "boolean"
                    date: 
                      type: "string"
                      format: "date-time"
                - 
                  title: "Task Hand back task action"
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "_id"
                    - "type"
                    - "payload"
                    - "date"
                  properties: 
                    _id: 
                      type: "string"
                    type: 
                      enum: 
                        - "hand-back"
                    payload: 
                      type: "object"
                      additionalProperties: false
                      required: 
                        - "userId"
                        - "reason"
                      properties: 
                        userId: 
                          type: "string"
                        reason: 
                          oneOf: 
                            - 
                              type: "object"
                              additionalProperties: false
                              required: 
                                - "type"
                                - "shiftId"
                              properties: 
                                type: 
                                  type: "string"
                                  enum: 
                                    - "shift/ended"
                                shiftId: 
                                  type: "string"
                            - 
                              type: "object"
                              additionalProperties: false
                              required: 
                                - "type"
                                - "actionId"
                              properties: 
                                type: 
                                  type: "string"
                                  enum: 
                                    - "task/abandoned"
                                actionId: 
                                  type: "string"
                    date: 
                      type: "string"
                      format: "date-time"
                - 
                  title: "Task Abandon task action"
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "_id"
                    - "type"
                    - "payload"
                    - "date"
                  properties: 
                    _id: 
                      type: "string"
                    type: 
                      enum: 
                        - "abandon"
                    payload: 
                      type: "object"
                      additionalProperties: false
                      required: 
                        - "receiverRoleName"
                      properties: 
                        receiverRoleName: 
                          type: "string"
                    date: 
                      type: "string"
                      format: "date-time"
                - 
                  title: "Task Assign task action"
                  type: "object"
                  required: 
                    - "_id"
                    - "type"
                    - "payload"
                    - "date"
                  properties: 
                    _id: 
                      type: "string"
                    type: 
                      enum: 
                        - "assign"
                    payload: 
                      type: "object"
                      required: 
                        - "taskHadNoAssignees"
                        - "loggedInUserRoleName"
                      properties: 
                        taskHadNoAssignees: 
                          type: "boolean"
                        loggedInUserRoleName: 
                          type: "string"
                    date: 
                      type: "string"
                      format: "datetime"
                - 
                  title: "Task Deassign task action"
                  type: "object"
                  required: 
                    - "_id"
                    - "type"
                    - "payload"
                    - "date"
                  properties: 
                    _id: 
                      type: "string"
                    type: 
                      enum: 
                        - "deassign"
                    payload: 
                      type: "object"
                      required: 
                        - "assignedToAnotherReceiver"
                        - "isAcceptorDeassigned"
                        - "receiverRoleName"
                      properties: 
                        assignedToAnotherReceiver: 
                          type: "boolean"
                        isAcceptorDeassigned: 
                          type: "boolean"
                        receiverRoleName: 
                          type: "string"
                    date: 
                      type: "string"
                      format: "datetime"
                - 
                  title: "Task Escalate task action"
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "_id"
                    - "type"
                    - "payload"
                    - "date"
                  properties: 
                    _id: 
                      type: "string"
                    type: 
                      enum: 
                        - "escalate"
                    payload: 
                      type: "object"
                      additionalProperties: false
                      required: 
                        - "reason"
                      properties: 
                        reason: 
                          oneOf: 
                            - 
                              type: "object"
                              additionalProperties: false
                              required: 
                                - "type"
                                - "cronjobId"
                              properties: 
                                type: 
                                  type: "string"
                                  enum: 
                                    - "scheduled"
                                cronjobId: 
                                  type: "string"
                            - 
                              type: "object"
                              additionalProperties: false
                              required: 
                                - "type"
                                - "userId"
                              properties: 
                                type: 
                                  type: "string"
                                  enum: 
                                    - "user-triggered"
                                userId: 
                                  type: "string"
                    date: 
                      type: "string"
                      format: "date-time"
                - 
                  title: "Task Delegate task action"
                  type: "object"
                  required: 
                    - "_id"
                    - "type"
                    - "payload"
                    - "date"
                  properties: 
                    _id: 
                      type: "string"
                    type: 
                      enum: 
                        - "delegate"
                    payload: 
                      type: "object"
                      required: 
                        - "to"
                        - "by"
                      properties: 
                        to: 
                          oneOf: 
                            - 
                              type: "object"
                              additionalProperties: false
                              required: 
                                - "target"
                              properties: 
                                target: 
                                  type: "object"
                                  additionalProperties: false
                                  required: 
                                    - "type"
                                    - "id"
                                  properties: 
                                    type: 
                                      type: "string"
                                      enum: 
                                        - "role"
                                        - "self"
                                    id: 
                                      type: "string"
                            - 
                              type: "object"
                              additionalProperties: false
                              required: 
                                - "location"
                              properties: 
                                location: 
                                  type: "object"
                                  additionalProperties: false
                                  required: 
                                    - "type"
                                    - "id"
                                  properties: 
                                    type: 
                                      type: "string"
                                      enum: 
                                        - "station"
                                        - "room"
                                        - "bed"
                                    id: 
                                      type: "string"
                            - 
                              type: "object"
                              additionalProperties: false
                              required: 
                                - "target"
                                - "location"
                              properties: 
                                target: 
                                  type: "object"
                                  additionalProperties: false
                                  required: 
                                    - "type"
                                    - "id"
                                  properties: 
                                    type: 
                                      type: "string"
                                      enum: 
                                        - "role"
                                        - "self"
                                    id: 
                                      type: "string"
                                location: 
                                  type: "object"
                                  additionalProperties: false
                                  required: 
                                    - "type"
                                    - "id"
                                  properties: 
                                    type: 
                                      type: "string"
                                      enum: 
                                        - "station"
                                        - "room"
                                        - "bed"
                                    id: 
                                      type: "string"
                        by: 
                          type: "object"
                          additionalProperties: false
                          required: 
                            - "type"
                            - "id"
                          properties: 
                            type: 
                              type: "string"
                              enum: 
                                - "user"
                            id: 
                              type: "string"
                    date: 
                      type: "string"
                      format: "datetime"
                - 
                  title: "Task Extend-Receivers task action"
                  type: "object"
                  required: 
                    - "_id"
                    - "type"
                    - "payload"
                    - "date"
                  properties: 
                    _id: 
                      type: "string"
                    type: 
                      enum: 
                        - "extend-receivers"
                    payload: 
                      type: "object"
                      required: 
                        - "delayMinutes"
                        - "receiverRoleName"
                      properties: 
                        delayMinutes: 
                          type: "number"
                        receiverRoleName: 
                          type: "string"
                    date: 
                      type: "string"
                      format: "datetime"
                - 
                  title: "Task Postpone task action"
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "_id"
                    - "type"
                    - "payload"
                    - "date"
                  properties: 
                    _id: 
                      type: "string"
                    type: 
                      enum: 
                        - "postpone"
                    payload: 
                      type: "object"
                      additionalProperties: false
                      required: 
                        - "newDueDate"
                      properties: 
                        newDueDate: 
                          type: "string"
                          format: "date-time"
                        messageId: 
                          type: "string"
                    date: 
                      type: "string"
                      format: "date-time"
          createdAt: 
            type: "string"
            format: "date-time"
          dueDate: 
            type: "string"
            format: "date-time"
      TaskLocationDTODefault: 
        title: "Task location"
        oneOf: 
          - 
            title: "Task station location"
            type: "object"
            additionalProperties: false
            required: 
              - "stationId"
              - "stationName"
            properties: 
              stationId: 
                type: "string"
              stationName: 
                type: "string"
          - 
            title: "Task room location"
            type: "object"
            additionalProperties: false
            required: 
              - "stationId"
              - "stationName"
              - "roomId"
              - "roomName"
            properties: 
              stationId: 
                type: "string"
              stationName: 
                type: "string"
              roomId: 
                type: "string"
              roomName: 
                type: "string"
          - 
            title: "Task bed location"
            type: "object"
            additionalProperties: false
            required: 
              - "stationId"
              - "stationName"
              - "roomId"
              - "roomName"
              - "bedId"
              - "bedName"
            properties: 
              stationId: 
                type: "string"
              stationName: 
                type: "string"
              roomId: 
                type: "string"
              roomName: 
                type: "string"
              bedId: 
                type: "string"
              bedName: 
                type: "string"
      TaskClosedDTODefault: 
        title: "Task closed"
        type: "object"
        required: 
          - "reason"
          - "closedAt"
          - "closedBy"
        properties: 
          reason: 
            title: "Task closed reason"
            type: "string"
            enum: 
              - "closed"
              - "completed"
          closedAt: 
            type: "string"
            format: "date-time"
          closedBy: 
            oneOf: 
              - 
                type: "string"
                enum: 
                  - "closed_automatically"
                  - "patient"
              - 
                type: "object"
                required: 
                  - "userId"
                  - "roleId"
                  - "areaId"
                properties: 
                  userId: 
                    type: "string"
                  roleId: 
                    type: "string"
                  areaId: 
                    type: "string"
                  username: 
                    type: "string"
                  nickname: 
                    type: "string"
      TaskDTOFlow: 
        title: "TaskDTOFlow"
        type: "object"
        required: 
          - "_id"
          - "tasktype"
          - "dueDate"
          - "messages"
          - "closed"
          - "createdAt"
          - "received"
          - "accepted"
          - "assignedTo"
          - "actions"
          - "createdBy"
          - "location"
        properties: 
          _id: 
            type: "string"
          tasktype: 
            title: "Tasktype"
            type: "object"
            required: 
              - "_id"
              - "name"
              - "localisedNames"
            properties: 
              _id: 
                type: "string"
              name: 
                type: "string"
              deName: 
                type: "string"
              iconId: 
                type: "string"
              isPatientRequest: 
                type: "boolean"
              localisedNames: 
                type: "object"
                additionalProperties: 
                  type: "string"
          dueDate: 
            type: "string"
            format: "date-time"
          location: 
            title: "Task location"
            oneOf: 
              - 
                title: "Task station location"
                type: "object"
                additionalProperties: false
                required: 
                  - "stationId"
                  - "stationName"
                properties: 
                  stationId: 
                    type: "string"
                  stationName: 
                    type: "string"
              - 
                title: "Task room location"
                type: "object"
                additionalProperties: false
                required: 
                  - "stationId"
                  - "stationName"
                  - "roomId"
                  - "roomName"
                properties: 
                  stationId: 
                    type: "string"
                  stationName: 
                    type: "string"
                  roomId: 
                    type: "string"
                  roomName: 
                    type: "string"
              - 
                title: "Task bed location"
                type: "object"
                additionalProperties: false
                required: 
                  - "stationId"
                  - "stationName"
                  - "roomId"
                  - "roomName"
                  - "bedId"
                  - "bedName"
                properties: 
                  stationId: 
                    type: "string"
                  stationName: 
                    type: "string"
                  roomId: 
                    type: "string"
                  roomName: 
                    type: "string"
                  bedId: 
                    type: "string"
                  bedName: 
                    type: "string"
          closed: 
            type: "object"
            required: 
              - "isCompleted"
              - "isCancelled"
              - "timeClosed"
              - "closedBy"
            properties: 
              isCompleted: 
                type: "boolean"
              isCancelled: 
                type: "boolean"
              timeClosed: 
                type: "string"
                format: "date-time"
                nullable: true
              closedBy: 
                oneOf: 
                  - 
                    type: "string"
                    enum: 
                      - "patient"
                      - "closed_automatically"
                  - 
                    type: "object"
                    required: 
                      - "userId"
                      - "roleId"
                      - "areaId"
                    properties: 
                      userId: 
                        type: "string"
                      roleId: 
                        type: "string"
                      areaId: 
                        type: "string"
                        nullable: true
                      username: 
                        type: "string"
                      nickname: 
                        type: "string"
          messages: 
            type: "array"
            items: 
              title: "Task message"
              type: "object"
              required: 
                - "_id"
                - "text"
                - "sender"
                - "time"
                - "pinned"
              properties: 
                _id: 
                  type: "string"
                text: 
                  type: "string"
                i18nId: 
                  type: "string"
                encrypted: 
                  type: "boolean"
                encryptionKeyName: 
                  type: "string"
                  enum: 
                    - "email-parser"
                    - "flow-user-defined"
                sender: 
                  title: "MessageSender"
                  type: "object"
                  required: 
                    - "userId"
                    - "roleId"
                    - "roleName"
                  additionalProperties: false
                  properties: 
                    userId: 
                      type: "string"
                    roleId: 
                      type: "string"
                    roleName: 
                      type: "string"
                    nickname: 
                      type: "string"
                    stationId: 
                      type: "string"
                time: 
                  type: "string"
                  format: "date-time"
                pinned: 
                  type: "boolean"
          received: 
            type: "number"
          accepted: 
            type: "boolean"
          acceptedBy: 
            type: "object"
            required: 
              - "roleId"
              - "username"
              - "userId"
              - "areaName"
            properties: 
              userId: 
                type: "string"
              roleId: 
                type: "string"
              areaId: 
                type: "string"
              username: 
                type: "string"
              areaName: 
                type: "string"
              nickname: 
                type: "string"
            nullable: true
          actions: 
            type: "array"
            items: 
              title: "Task action"
              oneOf: 
                - 
                  title: "Task Create task action"
                  type: "object"
                  required: 
                    - "_id"
                    - "type"
                    - "payload"
                    - "date"
                  properties: 
                    _id: 
                      type: "string"
                    type: 
                      enum: 
                        - "create"
                    payload: 
                      type: "object"
                      required: 
                        - "areThereUsersOnlineToBeAssigned"
                        - "receiverRoleName"
                        - "isCheapestRoleAssigned"
                        - "cheaperRoleNames"
                      properties: 
                        areThereUsersOnlineToBeAssigned: 
                          type: "boolean"
                        receiverRoleName: 
                          type: "string"
                        isCheapestRoleAssigned: 
                          type: "boolean"
                        cheaperRoleNames: 
                          type: "array"
                          items: 
                            type: "string"
                    date: 
                      type: "string"
                      format: "datetime"
                - 
                  title: "Task Accept task action"
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "_id"
                    - "type"
                    - "payload"
                    - "date"
                  properties: 
                    _id: 
                      type: "string"
                    type: 
                      enum: 
                        - "accept"
                    payload: 
                      type: "object"
                      additionalProperties: false
                      required: 
                        - "accepteeUserId"
                        - "isRepeated"
                      properties: 
                        accepteeUserId: 
                          type: "string"
                        isRepeated: 
                          type: "boolean"
                    date: 
                      type: "string"
                      format: "date-time"
                - 
                  title: "Task Hand back task action"
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "_id"
                    - "type"
                    - "payload"
                    - "date"
                  properties: 
                    _id: 
                      type: "string"
                    type: 
                      enum: 
                        - "hand-back"
                    payload: 
                      type: "object"
                      additionalProperties: false
                      required: 
                        - "userId"
                        - "reason"
                      properties: 
                        userId: 
                          type: "string"
                        reason: 
                          oneOf: 
                            - 
                              type: "object"
                              additionalProperties: false
                              required: 
                                - "type"
                                - "shiftId"
                              properties: 
                                type: 
                                  type: "string"
                                  enum: 
                                    - "shift/ended"
                                shiftId: 
                                  type: "string"
                            - 
                              type: "object"
                              additionalProperties: false
                              required: 
                                - "type"
                                - "actionId"
                              properties: 
                                type: 
                                  type: "string"
                                  enum: 
                                    - "task/abandoned"
                                actionId: 
                                  type: "string"
                    date: 
                      type: "string"
                      format: "date-time"
                - 
                  title: "Task Abandon task action"
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "_id"
                    - "type"
                    - "payload"
                    - "date"
                  properties: 
                    _id: 
                      type: "string"
                    type: 
                      enum: 
                        - "abandon"
                    payload: 
                      type: "object"
                      additionalProperties: false
                      required: 
                        - "receiverRoleName"
                      properties: 
                        receiverRoleName: 
                          type: "string"
                    date: 
                      type: "string"
                      format: "date-time"
                - 
                  title: "Task Assign task action"
                  type: "object"
                  required: 
                    - "_id"
                    - "type"
                    - "payload"
                    - "date"
                  properties: 
                    _id: 
                      type: "string"
                    type: 
                      enum: 
                        - "assign"
                    payload: 
                      type: "object"
                      required: 
                        - "taskHadNoAssignees"
                        - "loggedInUserRoleName"
                      properties: 
                        taskHadNoAssignees: 
                          type: "boolean"
                        loggedInUserRoleName: 
                          type: "string"
                    date: 
                      type: "string"
                      format: "datetime"
                - 
                  title: "Task Deassign task action"
                  type: "object"
                  required: 
                    - "_id"
                    - "type"
                    - "payload"
                    - "date"
                  properties: 
                    _id: 
                      type: "string"
                    type: 
                      enum: 
                        - "deassign"
                    payload: 
                      type: "object"
                      required: 
                        - "assignedToAnotherReceiver"
                        - "isAcceptorDeassigned"
                        - "receiverRoleName"
                      properties: 
                        assignedToAnotherReceiver: 
                          type: "boolean"
                        isAcceptorDeassigned: 
                          type: "boolean"
                        receiverRoleName: 
                          type: "string"
                    date: 
                      type: "string"
                      format: "datetime"
                - 
                  title: "Task Escalate task action"
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "_id"
                    - "type"
                    - "payload"
                    - "date"
                  properties: 
                    _id: 
                      type: "string"
                    type: 
                      enum: 
                        - "escalate"
                    payload: 
                      type: "object"
                      additionalProperties: false
                      required: 
                        - "reason"
                      properties: 
                        reason: 
                          oneOf: 
                            - 
                              type: "object"
                              additionalProperties: false
                              required: 
                                - "type"
                                - "cronjobId"
                              properties: 
                                type: 
                                  type: "string"
                                  enum: 
                                    - "scheduled"
                                cronjobId: 
                                  type: "string"
                            - 
                              type: "object"
                              additionalProperties: false
                              required: 
                                - "type"
                                - "userId"
                              properties: 
                                type: 
                                  type: "string"
                                  enum: 
                                    - "user-triggered"
                                userId: 
                                  type: "string"
                    date: 
                      type: "string"
                      format: "date-time"
                - 
                  title: "Task Delegate task action"
                  type: "object"
                  required: 
                    - "_id"
                    - "type"
                    - "payload"
                    - "date"
                  properties: 
                    _id: 
                      type: "string"
                    type: 
                      enum: 
                        - "delegate"
                    payload: 
                      type: "object"
                      required: 
                        - "to"
                        - "by"
                      properties: 
                        to: 
                          oneOf: 
                            - 
                              type: "object"
                              additionalProperties: false
                              required: 
                                - "target"
                              properties: 
                                target: 
                                  type: "object"
                                  additionalProperties: false
                                  required: 
                                    - "type"
                                    - "id"
                                  properties: 
                                    type: 
                                      type: "string"
                                      enum: 
                                        - "role"
                                        - "self"
                                    id: 
                                      type: "string"
                            - 
                              type: "object"
                              additionalProperties: false
                              required: 
                                - "location"
                              properties: 
                                location: 
                                  type: "object"
                                  additionalProperties: false
                                  required: 
                                    - "type"
                                    - "id"
                                  properties: 
                                    type: 
                                      type: "string"
                                      enum: 
                                        - "station"
                                        - "room"
                                        - "bed"
                                    id: 
                                      type: "string"
                            - 
                              type: "object"
                              additionalProperties: false
                              required: 
                                - "target"
                                - "location"
                              properties: 
                                target: 
                                  type: "object"
                                  additionalProperties: false
                                  required: 
                                    - "type"
                                    - "id"
                                  properties: 
                                    type: 
                                      type: "string"
                                      enum: 
                                        - "role"
                                        - "self"
                                    id: 
                                      type: "string"
                                location: 
                                  type: "object"
                                  additionalProperties: false
                                  required: 
                                    - "type"
                                    - "id"
                                  properties: 
                                    type: 
                                      type: "string"
                                      enum: 
                                        - "station"
                                        - "room"
                                        - "bed"
                                    id: 
                                      type: "string"
                        by: 
                          type: "object"
                          additionalProperties: false
                          required: 
                            - "type"
                            - "id"
                          properties: 
                            type: 
                              type: "string"
                              enum: 
                                - "user"
                            id: 
                              type: "string"
                    date: 
                      type: "string"
                      format: "datetime"
                - 
                  title: "Task Extend-Receivers task action"
                  type: "object"
                  required: 
                    - "_id"
                    - "type"
                    - "payload"
                    - "date"
                  properties: 
                    _id: 
                      type: "string"
                    type: 
                      enum: 
                        - "extend-receivers"
                    payload: 
                      type: "object"
                      required: 
                        - "delayMinutes"
                        - "receiverRoleName"
                      properties: 
                        delayMinutes: 
                          type: "number"
                        receiverRoleName: 
                          type: "string"
                    date: 
                      type: "string"
                      format: "datetime"
                - 
                  title: "Task Postpone task action"
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "_id"
                    - "type"
                    - "payload"
                    - "date"
                  properties: 
                    _id: 
                      type: "string"
                    type: 
                      enum: 
                        - "postpone"
                    payload: 
                      type: "object"
                      additionalProperties: false
                      required: 
                        - "newDueDate"
                      properties: 
                        newDueDate: 
                          type: "string"
                          format: "date-time"
                        messageId: 
                          type: "string"
                    date: 
                      type: "string"
                      format: "date-time"
          assignedTo: 
            type: "array"
            items: 
              type: "string"
          receiver: 
            oneOf: 
              - 
                type: "object"
                required: 
                  - "userId"
                properties: 
                  userId: 
                    type: "string"
              - 
                type: "object"
                required: 
                  - "roleId"
                properties: 
                  roleId: 
                    type: "string"
              - 
                type: "object"
                required: 
                  - "stationId"
                properties: 
                  stationId: 
                    type: "string"
          patientRequestDetails: 
            type: "object"
            required: 
              - "isThanks"
            properties: 
              isThanks: 
                type: "boolean"
          relationships: 
            type: "object"
            required: 
              - "rootTaskId"
            properties: 
              rootTaskId: 
                type: "string"
          createdAt: 
            type: "string"
            format: "date-time"
          createdBy: 
            type: "object"
            required: 
              - "userId"
            properties: 
              userId: 
                type: "string"
      TaskVariable: 
        title: "TaskVariable"
        oneOf: 
          - 
            $ref: "#/components/schemas/TaskVariableLocation"
      TaskVariableTarget: 
        title: "Target variable"
        type: "object"
        required: 
          - "id"
          - "type"
          - "value"
        additionalProperties: false
        properties: 
          id: 
            type: "string"
          type: 
            type: "string"
            enum: 
              - "target"
          value: 
            oneOf: 
              - 
                $ref: "#/components/schemas/TaskVariableTargetValueSelf"
              - 
                $ref: "#/components/schemas/TaskVariableTargetValueRole"
      TaskVariableTargetValueSelf: 
        title: "Self target"
        type: "object"
        required: 
          - "type"
        additionalProperties: false
        properties: 
          type: 
            type: "string"
            enum: 
              - "self"
      TaskVariableTargetValueRole: 
        title: "Role target"
        type: "object"
        required: 
          - "type"
          - "id"
        additionalProperties: false
        properties: 
          type: 
            type: "string"
            enum: 
              - "role"
          id: 
            type: "string"
      TaskVariableLocation: 
        title: "Location variable"
        type: "object"
        required: 
          - "id"
          - "type"
          - "value"
        additionalProperties: false
        properties: 
          id: 
            type: "string"
          type: 
            type: "string"
            enum: 
              - "location"
          value: 
            oneOf: 
              - 
                $ref: "#/components/schemas/TaskVariableLocationValueStation"
              - 
                $ref: "#/components/schemas/TaskVariableLocationValueRoom"
              - 
                $ref: "#/components/schemas/TaskVariableLocationValueBed"
      TaskVariableLocationValueStation: 
        title: "Station location"
        type: "object"
        required: 
          - "type"
          - "id"
        additionalProperties: false
        properties: 
          type: 
            type: "string"
            enum: 
              - "station"
          id: 
            type: "string"
      TaskVariableLocationValueRoom: 
        title: "Room location"
        type: "object"
        required: 
          - "type"
          - "id"
        additionalProperties: false
        properties: 
          type: 
            type: "string"
            enum: 
              - "room"
          id: 
            type: "string"
      TaskVariableLocationValueBed: 
        title: "Bed location"
        type: "object"
        required: 
          - "type"
          - "id"
        additionalProperties: false
        properties: 
          type: 
            type: "string"
            enum: 
              - "bed"
          id: 
            type: "string"
      TaskVariableDueDate: 
        title: "Due date variable"
        type: "object"
        required: 
          - "id"
          - "type"
          - "value"
        additionalProperties: false
        properties: 
          id: 
            type: "string"
          type: 
            type: "string"
            enum: 
              - "due-date"
          value: 
            $ref: "#/components/schemas/TaskVariableDueDateValueCustom"
      TaskVariableDueDateValueCustom: 
        title: "Custom due date"
        type: "object"
        required: 
          - "type"
          - "date"
        additionalProperties: false
        properties: 
          type: 
            type: "string"
            enum: 
              - "custom"
          date: 
            type: "string"
            format: "date-time"
      TaskContainer: 
        title: "TaskContainer"
        type: "object"
        required: 
          - "_id"
          - "type"
          - "variables"
          - "skip"
          - "isCompleted"
          - "createdBy"
          - "createdAt"
        additionalProperties: false
        properties: 
          _id: 
            type: "string"
          type: 
            title: "Type of TaskContainer"
            type: "object"
            required: 
              - "_id"
              - "name"
              - "subtaskTypes"
            additionalProperties: false
            properties: 
              _id: 
                type: "string"
              name: 
                type: "string"
              subtaskTypes: 
                type: "array"
                items: 
                  type: "object"
                  required: 
                    - "_id"
                    - "name"
                    - "isOptional"
                    - "prevIds"
                    - "location"
                    - "target"
                  additionalProperties: false
                  properties: 
                    _id: 
                      type: "string"
                    name: 
                      type: "string"
                    isOptional: 
                      type: "boolean"
                    prevIds: 
                      type: "array"
                      items: 
                        type: "string"
                    location: 
                      oneOf: 
                        - 
                          type: "object"
                          required: 
                            - "type"
                          additionalProperties: false
                          properties: 
                            type: 
                              type: "string"
                              enum: 
                                - "user-defined"
                        - 
                          type: "object"
                          required: 
                            - "type"
                            - "value"
                          additionalProperties: false
                          properties: 
                            type: 
                              type: "string"
                              enum: 
                                - "admin-defined"
                            value: 
                              type: "object"
                              required: 
                                - "type"
                                - "id"
                              additionalProperties: false
                              properties: 
                                type: 
                                  type: "string"
                                  enum: 
                                    - "station"
                                    - "room"
                                    - "bed"
                                id: 
                                  type: "string"
                        - 
                          type: "object"
                          required: 
                            - "type"
                            - "subtaskTypeId"
                          additionalProperties: false
                          properties: 
                            type: 
                              type: "string"
                              enum: 
                                - "from-subtask"
                            subtaskTypeId: 
                              type: "string"
                    target: 
                      type: "object"
                      required: 
                        - "type"
                        - "roles"
                      additionalProperties: false
                      properties: 
                        type: 
                          type: "string"
                          enum: 
                            - "admin-defined"
                        roles: 
                          type: "array"
                          items: 
                            type: "object"
                            required: 
                              - "id"
                              - "name"
                            additionalProperties: false
                            properties: 
                              id: 
                                type: "string"
                              name: 
                                type: "string"
          variables: 
            type: "object"
            additionalProperties: 
              $ref: "#/components/schemas/TaskVariableLocation"
          skip: 
            type: "array"
            items: 
              type: "string"
          isCompleted: 
            type: "boolean"
          closed: 
            type: "object"
            required: 
              - "reason"
              - "by"
              - "date"
            properties: 
              reason: 
                type: "string"
                enum: 
                  - "cancelled"
                  - "completed"
              by: 
                type: "string"
              date: 
                type: "string"
                format: "date-time"
          createdBy: 
            type: "string"
          createdAt: 
            type: "string"
            format: "date-time"
      LocationID: 
        oneOf: 
          - 
            title: "Station location ID"
            type: "object"
            additionalProperties: false
            required: 
              - "type"
              - "id"
            properties: 
              type: 
                type: "string"
                enum: 
                  - "station"
              id: 
                type: "string"
          - 
            title: "Room location ID"
            type: "object"
            additionalProperties: false
            required: 
              - "type"
              - "id"
            properties: 
              type: 
                type: "string"
                enum: 
                  - "room"
              id: 
                type: "string"
          - 
            title: "Bed location ID"
            type: "object"
            additionalProperties: false
            required: 
              - "type"
              - "id"
            properties: 
              type: 
                type: "string"
                enum: 
                  - "bed"
              id: 
                type: "string"
      TaskMessage: 
        type: "object"
        required: 
          - "_id"
        properties: 
          _id: 
            type: "string"
      TasksPostBodyNew: 
        title: "POST /tasks body container"
        type: "object"
        required: 
          - "typeId"
          - "variables"
          - "skip"
        additionalProperties: false
        properties: 
          id: 
            type: "string"
          typeId: 
            type: "string"
          variables: 
            type: "object"
            additionalProperties: 
              $ref: "#/components/schemas/TaskVariable"
          skip: 
            description: "List of optional subtask types ids that should be skipped"
            type: "array"
            items: 
              type: "string"
          messages: 
            type: "array"
            items: 
              type: "object"
              additionalProperties: false
              required: 
                - "text"
              properties: 
                encryption: 
                  type: "object"
                  additionalProperties: false
                  required: 
                    - "key"
                  properties: 
                    key: 
                      type: "string"
                      enum: 
                        - "email-parser"
                        - "flow-user-defined"
                text: 
                  type: "string"
      TasksPostBodyOld: 
        title: "POST /tasks body"
        type: "object"
        required: 
          - "request"
          - "location"
        additionalProperties: false
        properties: 
          id: 
            type: "string"
          request: 
            oneOf: 
              - 
                title: "Menu request"
                type: "object"
                additionalProperties: false
                required: 
                  - "type"
                  - "id"
                properties: 
                  type: 
                    enum: 
                      - "menu"
                  id: 
                    type: "string"
              - 
                title: "Menu pain request"
                type: "object"
                additionalProperties: false
                required: 
                  - "type"
                  - "id"
                  - "painScore"
                properties: 
                  type: 
                    enum: 
                      - "menu-pain"
                  id: 
                    type: "string"
                  painScore: 
                    type: "number"
                    minimum: 1
                    maximum: 5
              - 
                title: "Task request"
                type: "object"
                additionalProperties: false
                required: 
                  - "type"
                  - "id"
                properties: 
                  type: 
                    enum: 
                      - "task"
                  id: 
                    type: "string"
              - 
                title: "Custom task request"
                type: "object"
                additionalProperties: false
                required: 
                  - "type"
                  - "title"
                properties: 
                  type: 
                    enum: 
                      - "custom-task"
                  title: 
                    type: "string"
          location: 
            oneOf: 
              - 
                title: "Station location"
                type: "object"
                additionalProperties: false
                required: 
                  - "stationId"
                properties: 
                  stationId: 
                    type: "string"
              - 
                title: "Room location"
                type: "object"
                additionalProperties: false
                required: 
                  - "roomId"
                properties: 
                  roomId: 
                    type: "string"
              - 
                title: "Bed location"
                type: "object"
                additionalProperties: false
                required: 
                  - "bedId"
                properties: 
                  bedId: 
                    type: "string"
          dueDate: 
            oneOf: 
              - 
                description: "Seconds since the Epoch"
                type: "number"
              - 
                description: "Example: 2018-11-13T20:20:39+00:00"
                type: "string"
                format: "date-time"
              - 
                description: "Example: 20:20:39+00:00"
                type: "string"
                format: "time"
              - 
                description: "Example: 2018-11-13"
                type: "string"
                format: "date"
          note: 
            type: "object"
            additionalProperties: false
            required: 
              - "content"
              - "encrypted"
            properties: 
              content: 
                type: "string"
              encrypted: 
                type: "boolean"
          receiver: 
            oneOf: 
              - 
                type: "object"
                additionalProperties: false
                required: 
                  - "stationId"
                properties: 
                  stationId: 
                    type: "string"
              - 
                type: "object"
                additionalProperties: false
                required: 
                  - "roleId"
                properties: 
                  roleId: 
                    type: "string"
              - 
                type: "object"
                additionalProperties: false
                required: 
                  - "userId"
                properties: 
                  userId: 
                    type: "string"
      ProjectDTODefault: 
        title: "Project"
        type: "object"
        required: 
          - "id"
        properties: 
          id: 
            type: "string"
          closed: 
            type: "object"
            required: 
              - "reason"
              - "by"
              - "date"
            properties: 
              reason: 
                type: "string"
                enum: 
                  - "cancelled"
                  - "completed"
              by: 
                type: "string"
              date: 
                type: "string"
                format: "date-time"
      TaskContainerType: 
        title: "TaskContainerTypeDTO"
        type: "object"
        required: 
          - "_id"
          - "name"
          - "iconId"
          - "hospitalId"
          - "stationIdsAvailableFor"
          - "initiators"
          - "subtaskTypes"
        properties: 
          _id: 
            type: "string"
          iconId: 
            type: "string"
            nullable: true
          name: 
            type: "string"
          hospitalId: 
            type: "string"
          stationIdsAvailableFor: 
            type: "array"
            items: 
              type: "string"
          initiators: 
            type: "object"
            required: 
              - "roleIds"
            additionalProperties: false
            properties: 
              roleIds: 
                type: "array"
                items: 
                  type: "string"
          subtaskTypes: 
            type: "array"
            items: 
              title: "TaskContainerSubtaskTypeDTO"
              type: "object"
              required: 
                - "_id"
                - "name"
                - "isOptional"
                - "prevIds"
                - "location"
                - "target"
              properties: 
                _id: 
                  type: "string"
                name: 
                  type: "string"
                isOptional: 
                  type: "boolean"
                prevIds: 
                  type: "array"
                  items: 
                    type: "string"
                location: 
                  oneOf: 
                    - 
                      type: "object"
                      required: 
                        - "type"
                        - "title"
                        - "stationTitle"
                        - "hint"
                        - "stationHint"
                      additionalProperties: false
                      properties: 
                        type: 
                          type: "string"
                          enum: 
                            - "user-defined"
                        title: 
                          type: "string"
                        stationTitle: 
                          type: "string"
                        hint: 
                          type: "string"
                        stationHint: 
                          type: "string"
                    - 
                      type: "object"
                      required: 
                        - "type"
                        - "value"
                      additionalProperties: false
                      properties: 
                        type: 
                          type: "string"
                          enum: 
                            - "admin-defined"
                        value: 
                          type: "object"
                          required: 
                            - "type"
                            - "id"
                          additionalProperties: false
                          properties: 
                            type: 
                              type: "string"
                              enum: 
                                - "station"
                                - "room"
                                - "bed"
                            id: 
                              type: "string"
                    - 
                      type: "object"
                      required: 
                        - "type"
                        - "subtaskTypeId"
                      additionalProperties: false
                      properties: 
                        type: 
                          type: "string"
                          enum: 
                            - "from-subtask"
                        subtaskTypeId: 
                          type: "string"
                target: 
                  type: "object"
                  required: 
                    - "type"
                    - "roleIds"
                  additionalProperties: false
                  properties: 
                    type: 
                      type: "string"
                      enum: 
                        - "admin-defined"
                    roleIds: 
                      type: "array"
                      items: 
                        type: "string"
      TaskContainerSubtaskType: 
        title: "TaskContainerSubtaskTypeDTO"
        type: "object"
        required: 
          - "_id"
          - "name"
          - "isOptional"
          - "prevIds"
          - "location"
          - "target"
        properties: 
          _id: 
            type: "string"
          name: 
            type: "string"
          isOptional: 
            type: "boolean"
          prevIds: 
            type: "array"
            items: 
              type: "string"
          location: 
            oneOf: 
              - 
                type: "object"
                required: 
                  - "type"
                  - "title"
                  - "stationTitle"
                  - "hint"
                  - "stationHint"
                additionalProperties: false
                properties: 
                  type: 
                    type: "string"
                    enum: 
                      - "user-defined"
                  title: 
                    type: "string"
                  stationTitle: 
                    type: "string"
                  hint: 
                    type: "string"
                  stationHint: 
                    type: "string"
              - 
                type: "object"
                required: 
                  - "type"
                  - "value"
                additionalProperties: false
                properties: 
                  type: 
                    type: "string"
                    enum: 
                      - "admin-defined"
                  value: 
                    type: "object"
                    required: 
                      - "type"
                      - "id"
                    additionalProperties: false
                    properties: 
                      type: 
                        type: "string"
                        enum: 
                          - "station"
                          - "room"
                          - "bed"
                      id: 
                        type: "string"
              - 
                type: "object"
                required: 
                  - "type"
                  - "subtaskTypeId"
                additionalProperties: false
                properties: 
                  type: 
                    type: "string"
                    enum: 
                      - "from-subtask"
                  subtaskTypeId: 
                    type: "string"
          target: 
            type: "object"
            required: 
              - "type"
              - "roleIds"
            additionalProperties: false
            properties: 
              type: 
                type: "string"
                enum: 
                  - "admin-defined"
              roleIds: 
                type: "array"
                items: 
                  type: "string"
      TasktypeDTODefault: 
        title: "Tasktype"
        type: "object"
        required: 
          - "_id"
          - "name"
          - "createdAt"
        properties: 
          _id: 
            type: "string"
          name: 
            type: "string"
          expiresAfter: 
            type: "number"
          createdAt: 
            type: "string"
      MenuitemDTODefault: 
        title: "Menuitem"
        type: "object"
        required: 
          - "_id"
          - "name"
          - "createdAt"
        properties: 
          _id: 
            type: "string"
          name: 
            type: "string"
          createdAt: 
            type: "string"
      OrganizationDTODefault: 
        title: "OrganizationDTODefault"
        type: "object"
        required: 
          - "_id"
          - "name"
          - "createdAt"
          - "integrations"
        additionalProperties: false
        properties: 
          _id: 
            type: "string"
          name: 
            type: "string"
          createdAt: 
            type: "string"
            format: "date-time"
          isActive: 
            type: "boolean"
          integrations: 
            type: "array"
            items: 
              type: "object"
              required: 
                - "type"
                - "apiKeys"
              additionalProperties: false
              properties: 
                type: 
                  type: "string"
                  enum: 
                    - "patient-terminal"
                    - "espa-bridge"
                apiKeys: 
                  type: "array"
                  items: 
                    type: "object"
                    required: 
                      - "key"
                      - "createdAt"
                    additionalProperties: false
                    properties: 
                      key: 
                        type: "string"
                      createdAt: 
                        type: "string"
                        format: "date-time"
                      expiresAt: 
                        type: "string"
                        format: "date-time"
      HospitalDTODefault: 
        title: "Hospital"
        type: "object"
        required: 
          - "id"
          - "name"
          - "isActive"
          - "createdAt"
        properties: 
          id: 
            type: "string"
          name: 
            type: "string"
          isActive: 
            type: "boolean"
          createdAt: 
            type: "string"
      AreaDTODefault: 
        title: "Area"
        type: "object"
        required: 
          - "_id"
          - "name"
          - "stationId"
        properties: 
          _id: 
            type: "string"
          name: 
            type: "string"
          stationId: 
            type: "string"
      StationDTODefault: 
        title: "Station"
        type: "object"
        required: 
          - "_id"
          - "name"
          - "hospitalId"
          - "meetingTimes"
          - "isActive"
        properties: 
          _id: 
            type: "string"
          name: 
            type: "string"
          hospitalId: 
            type: "string"
          meetingTimes: 
            type: "array"
            items: 
              $ref: "#/components/schemas/StationMeetingTimesDTODefault"
          isActive: 
            type: "boolean"
      StationMeetingTimesDTODefault: 
        title: "Meeting Times"
        type: "object"
        required: 
          - "number"
          - "startTime"
          - "endTime"
        properties: 
          number: 
            type: "number"
          startTime: 
            type: "number"
          endTime: 
            type: "number"
      RoomDTODefault: 
        title: "Room"
        type: "object"
        required: 
          - "_id"
          - "name"
          - "stationId"
          - "isActive"
        properties: 
          _id: 
            type: "string"
          name: 
            type: "string"
          stationId: 
            type: "string"
          isActive: 
            type: "boolean"
      BedDTODefault: 
        title: "Bed"
        type: "object"
        required: 
          - "_id"
          - "name"
          - "roomId"
          - "code"
          - "isActive"
        properties: 
          _id: 
            type: "string"
          name: 
            type: "string"
          roomId: 
            type: "string"
          code: 
            type: "string"
          isActive: 
            type: "boolean"
      TrifactIntegrationBedInfo: 
        title: "Trifact integration Bed info"
        type: "object"
        required: 
          - "id"
        properties: 
          id: 
            type: "string"
      RoleDTODefault: 
        title: "Role"
        type: "object"
        required: 
          - "_id"
          - "name"
          - "price"
          - "tasktypes"
          - "tasktypesAllowedToCreate"
          - "createdAt"
        properties: 
          _id: 
            type: "string"
          name: 
            type: "string"
          price: 
            type: "number"
          tasktypes: 
            type: "array"
            items: 
              type: "string"
          tasktypesAllowedToCreate: 
            type: "array"
            items: 
              type: "string"
          menuitems: 
            type: "array"
            items: 
              type: "string"
          createdAt: 
            type: "string"
      UserDTODefault: 
        title: "User"
        type: "object"
        required: 
          - "_id"
          - "username"
          - "createdAt"
          - "isHidden"
        properties: 
          _id: 
            type: "string"
          username: 
            type: "string"
          createdAt: 
            type: "string"
          isHidden: 
            type: "boolean"
      PatientDTODefault: 
        title: "Station"
        type: "object"
        required: 
          - "_id"
          - "bedId"
        properties: 
          _id: 
            type: "string"
          bedId: 
            type: "string"
      FlowLogsVideoViewRequestBody: 
        title: "Video view log body"
        type: "object"
        required: 
          - "videoId"
          - "eventType"
          - "date"
        additionalProperties: false
        properties: 
          videoId: 
            type: "string"
          eventType: 
            type: "string"
            enum: 
              - "video-view"
          date: 
            type: "string"
            format: "date-time"
      FlowLogsActivityRequestBody: 
        title: "Activity log body"
        type: "object"
        required: 
          - "eventType"
          - "date"
        additionalProperties: false
        properties: 
          eventType: 
            type: "string"
            enum: 
              - "background-task"
              - "startup"
          date: 
            type: "string"
            format: "date-time"
      RobotiseDrawerDTO: 
        title: "Robotise drawer"
        type: "object"
        required: 
          - "_id"
          - "requestId"
          - "isOpen"
          - "isLoaded"
        properties: 
          _id: 
            type: "string"
          requestId: 
            type: "string"
          isOpen: 
            type: "boolean"
          isLoaded: 
            type: "boolean"
      RobotiseRobotDTO: 
        title: "Robotise robot"
        type: "object"
        required: 
          - "_id"
          - "isBeingCleaned"
          - "isBeingRefilled"
        properties: 
          _id: 
            type: "string"
          isBeingCleaned: 
            type: "boolean"
          isBeingRefilled: 
            type: "boolean"
      MessageDTODefault: 
        title: "Message"
        type: "object"
        required: 
          - "_id"
          - "text"
          - "sentAt"
        properties: 
          _id: 
            type: "string"
          text: 
            type: "string"
          sentAt: 
            type: "string"
            format: "date-time"
      MenuDTOPatient: 
        title: "Menu item"
        type: "object"
        required: 
          - "_id"
          - "name"
          - "postName"
          - "icon"
          - "parentId"
          - "includeDetails"
          - "includeUrgency"
          - "details"
          - "availableTimes"
          - "isPain"
          - "isNurseFeedback"
          - "isAppFeedback"
          - "hasChildren"
          - "link"
        properties: 
          _id: 
            type: "string"
          icon: 
            type: "string"
          name: 
            type: "string"
          postName: 
            type: "string"
          parentId: 
            type: "string"
          includeDetails: 
            type: "boolean"
          includeUrgency: 
            type: "boolean"
          details: 
            type: "string"
          availableTimes: 
            type: "array"
            items: 
              title: "available time"
              type: "object"
              required: 
                - "_id"
                - "start"
                - "end"
                - "days"
              additionalProperties: false
              properties: 
                _id: 
                  type: "string"
                start: 
                  type: "number"
                end: 
                  type: "number"
                days: 
                  type: "array"
                  items: 
                    type: "number"
          isPain: 
            type: "boolean"
          isNurseFeedback: 
            type: "boolean"
          isAppFeedback: 
            type: "boolean"
          hasChildren: 
            type: "boolean"
          link: 
            title: "item link"
            type: "object"
            required: 
              - "enabled"
              - "value"
              - "openInIframe"
            additionalProperties: false
            properties: 
              enabled: 
                type: "boolean"
              value: 
                type: "string"
              openInIframe: 
                type: "boolean"
      MenuitemPreviewDTOPatient: 
        title: "Menu item preview"
        type: "object"
        required: 
          - "_id"
          - "name"
          - "icon"
          - "parentId"
          - "details"
          - "availableTimes"
          - "children"
          - "reassignmentUrgency"
          - "roles"
          - "treeDepth"
        properties: 
          _id: 
            type: "string"
          name: 
            type: "string"
          postName: 
            type: "string"
          icon: 
            type: "string"
          parentId: 
            type: "string"
          details: 
            type: "string"
          availableTimes: 
            type: "array"
            items: 
              type: "object"
              required: 
                - "_id"
                - "time"
              additionalProperties: false
              properties: 
                _id: 
                  type: "string"
                time: 
                  type: "string"
          children: 
            type: "array"
            items: 
              title: "Menu item preview"
              type: "object"
              required: 
                - "_id"
                - "name"
                - "icon"
                - "parentId"
                - "details"
                - "availableTimes"
                - "children"
                - "reassignmentUrgency"
                - "roles"
                - "treeDepth"
              properties: 
                _id: 
                  type: "string"
                name: 
                  type: "string"
                postName: 
                  type: "string"
                icon: 
                  type: "string"
                parentId: 
                  type: "string"
                details: 
                  type: "string"
                availableTimes: 
                  type: "array"
                  items: 
                    type: "object"
                    required: 
                      - "_id"
                      - "time"
                    additionalProperties: false
                    properties: 
                      _id: 
                        type: "string"
                      time: 
                        type: "string"
                children: 
                  type: "array"
                  items: 
                    title: "Menu item preview"
                    type: "object"
                    required: 
                      - "_id"
                      - "name"
                      - "icon"
                      - "parentId"
                      - "details"
                      - "availableTimes"
                      - "children"
                      - "reassignmentUrgency"
                      - "roles"
                      - "treeDepth"
                    properties: 
                      _id: 
                        type: "string"
                      name: 
                        type: "string"
                      postName: 
                        type: "string"
                      icon: 
                        type: "string"
                      parentId: 
                        type: "string"
                      details: 
                        type: "string"
                      availableTimes: 
                        type: "array"
                        items: 
                          type: "object"
                          required: 
                            - "_id"
                            - "time"
                          additionalProperties: false
                          properties: 
                            _id: 
                              type: "string"
                            time: 
                              type: "string"
                      children: 
                        type: "array"
                        items: 
                          title: "Menu item preview"
                          type: "object"
                          required: 
                            - "_id"
                            - "name"
                            - "icon"
                            - "parentId"
                            - "details"
                            - "availableTimes"
                            - "children"
                            - "reassignmentUrgency"
                            - "roles"
                            - "treeDepth"
                          properties: 
                            _id: 
                              type: "string"
                            name: 
                              type: "string"
                            postName: 
                              type: "string"
                            icon: 
                              type: "string"
                            parentId: 
                              type: "string"
                            details: 
                              type: "string"
                            availableTimes: 
                              type: "array"
                              items: 
                                type: "object"
                                required: 
                                  - "_id"
                                  - "time"
                                additionalProperties: false
                                properties: 
                                  _id: 
                                    type: "string"
                                  time: 
                                    type: "string"
                            children: 
                              type: "array"
                              items: 
                                title: "Menu item preview"
                                type: "object"
                                required: 
                                  - "_id"
                                  - "name"
                                  - "icon"
                                  - "parentId"
                                  - "details"
                                  - "availableTimes"
                                  - "children"
                                  - "reassignmentUrgency"
                                  - "roles"
                                  - "treeDepth"
                                properties: 
                                  _id: 
                                    type: "string"
                                  name: 
                                    type: "string"
                                  postName: 
                                    type: "string"
                                  icon: 
                                    type: "string"
                                  parentId: 
                                    type: "string"
                                  details: 
                                    type: "string"
                                  availableTimes: 
                                    type: "array"
                                    items: 
                                      type: "object"
                                      required: 
                                        - "_id"
                                        - "time"
                                      additionalProperties: false
                                      properties: 
                                        _id: 
                                          type: "string"
                                        time: 
                                          type: "string"
                                  children: 
                                    type: "array"
                                    items: 
                                      type: "object"
                                  reassignmentUrgency: 
                                    type: "string"
                                  roles: 
                                    type: "array"
                                    items: 
                                      type: "string"
                                  treeDepth: 
                                    type: "number"
                            reassignmentUrgency: 
                              type: "string"
                            roles: 
                              type: "array"
                              items: 
                                type: "string"
                            treeDepth: 
                              type: "number"
                      reassignmentUrgency: 
                        type: "string"
                      roles: 
                        type: "array"
                        items: 
                          type: "string"
                      treeDepth: 
                        type: "number"
                reassignmentUrgency: 
                  type: "string"
                roles: 
                  type: "array"
                  items: 
                    type: "string"
                treeDepth: 
                  type: "number"
          reassignmentUrgency: 
            type: "string"
          roles: 
            type: "array"
            items: 
              type: "string"
          treeDepth: 
            type: "number"
      PatientLocationDTOPatient: 
        title: "Full Patient Location"
        type: "object"
        required: 
          - "bedId"
          - "bedName"
          - "roomName"
          - "stationId"
          - "stationName"
          - "hospitalId"
        properties: 
          bedId: 
            type: "string"
          bedName: 
            type: "string"
          roomName: 
            type: "string"
          stationId: 
            type: "string"
          stationName: 
            type: "string"
          hospitalId: 
            type: "string"
          terminalId: 
            type: "string"
      TerminalLocationDTOPatient: 
        title: "Terminal Location"
        type: "object"
        required: 
          - "bedId"
          - "bedName"
          - "roomName"
          - "stationId"
          - "stationName"
          - "hospitalId"
        properties: 
          bedId: 
            type: "string"
          bedName: 
            type: "string"
          roomName: 
            type: "string"
          stationId: 
            type: "string"
          stationName: 
            type: "string"
          hospitalId: 
            type: "string"
          terminalId: 
            type: "string"
      RequestDTOPatient: 
        title: "Patient Request"
        type: "object"
        required: 
          - "_id"
          - "tasktype"
          - "createdAt"
          - "dueDate"
          - "patientRequestDetails"
          - "messages"
          - "closed"
        properties: 
          _id: 
            type: "string"
          tasktype: 
            type: "object"
            required: 
              - "_id"
              - "name"
              - "icon"
            additionalProperties: false
            properties: 
              _id: 
                type: "string"
              name: 
                type: "string"
              postName: 
                type: "string"
              icon: 
                type: "string"
          createdAt: 
            type: "string"
            format: "date-time"
          dueDate: 
            type: "string"
            format: "date-time"
          patientRequestDetails: 
            type: "object"
            required: 
              - "code"
              - "readAt"
              - "isRead"
              - "timeThanks"
              - "isThanks"
              - "nurseFeedbackTime"
            additionalProperties: false
            properties: 
              code: 
                type: "string"
              readAt: 
                type: "string"
              isRead: 
                type: "boolean"
              timeThanks: 
                type: "string"
                format: "date-time"
              isThanks: 
                type: "boolean"
              nurseFeedbackTime: 
                type: "string"
                format: "date-time"
              nurseFeedbackTimeGiven: 
                type: "string"
                format: "date-time"
              userPushToken: 
                type: "string"
              myRequestsPageOpened: 
                type: "array"
                items: 
                  type: "string"
                  format: "date-time"
          messages: 
            type: "array"
            items: 
              $ref: "#/components/schemas/TaskMessageDTOPatient"
          closed: 
            type: "object"
            required: 
              - "isCompleted"
              - "timeClosed"
            additionalProperties: false
            properties: 
              isCompleted: 
                type: "boolean"
              timeClosed: 
                type: "string"
                format: "date-time"
      TaskMessageDTOPatient: 
        title: "Task Message"
        oneOf: 
          - 
            title: "Normal Message"
            type: "object"
            additionalProperties: false
            required: 
              - "_id"
              - "type"
              - "text"
              - "pinned"
              - "time"
            properties: 
              _id: 
                type: "string"
              type: 
                type: "string"
              text: 
                type: "string"
              i18nId: 
                type: "string"
              pinned: 
                type: "boolean"
              encrypted: 
                type: "boolean"
              encryptionKeyName: 
                type: "string"
                enum: 
                  - "email-parser"
                  - "flow-user-defined"
              sender: 
                type: "object"
                additionalProperties: false
                required: 
                  - "userId"
                  - "roleId"
                  - "roleName"
                properties: 
                  userId: 
                    type: "string"
                  roleId: 
                    type: "string"
                  roleName: 
                    type: "string"
                  nickname: 
                    type: "string"
                  stationId: 
                    type: "string"
              senderId: 
                type: "string"
              time: 
                type: "string"
                format: "date-time"
          - 
            title: "Patient Message"
            type: "object"
            additionalProperties: false
            required: 
              - "_id"
              - "type"
              - "text"
              - "pinned"
              - "time"
            properties: 
              _id: 
                type: "string"
              type: 
                type: "string"
              text: 
                type: "string"
              i18nId: 
                type: "string"
              pinned: 
                type: "boolean"
              encrypted: 
                type: "boolean"
              senderId: 
                type: "string"
              time: 
                type: "string"
                format: "date-time"
    responses: 
      UnexpectedError: 
        description: "Request can't be handled by the server as unexpected error occured"
        content: 
          application/json: 
            schema: 
              type: "object"
              additionalProperties: false
              required: 
                - "status"
              properties: 
                status: 
                  enum: 
                    - "unexpected-error"

